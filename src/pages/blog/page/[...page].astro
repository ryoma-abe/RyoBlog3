---
import { getSortedPosts } from "../../../lib/blog";
import Layout from "../../../layouts/Layout.astro";
import Pagination from "../../../components/Pagination.astro";

const POSTS_PER_PAGE = 5;

export async function getStaticPaths() {
  const POSTS_PER_PAGE = 5;
  const allPosts = await getSortedPosts();
  const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);

  const paths = Array.from({ length: totalPages }, (_, i) => ({
    params: { page: i === 0 ? undefined : String(i + 1) },
  }));
  return paths;
}

const allPosts = await getSortedPosts();
const pageParam = Astro.params.page;
const currentPage = pageParam ? parseInt(pageParam) : 1;
const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);

// ページ範囲の投稿を抽出
const start = (currentPage - 1) * POSTS_PER_PAGE;
const end = start + POSTS_PER_PAGE;
const posts = allPosts.slice(start, end);
---

<Layout>
  <main class="max-w-4xl mx-auto px-4 py-8 text-white">
    <h1 class="text-2xl font-bold mb-6">ページ {currentPage}</h1>

    <ul class="space-y-4">
      {
        posts.map((post) => (
          <li class="p-4 border rounded">
            <a
              href={`/blog/${post.slug}`}
              class="text-lg font-semibold hover:underline"
            >
              {post.data.title}
            </a>
            <p class="text-sm text-gray-400">{post.data.date}</p>
            {post.data.description && (
              <p class="mt-2 text-gray-300">{post.data.description}</p>
            )}
          </li>
        ))
      }
    </ul>

    <Pagination
      currentPage={currentPage}
      totalPages={totalPages}
      baseUrl="/blog/page"
    />
  </main>
</Layout>
