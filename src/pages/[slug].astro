---
import Layout from "../layouts/Layout.astro";
import {
  getNotionPosts,
  getNotionBlocks,
  renderBlock,
  finalizeRenderedContent,
} from "../lib/api/notion";
import type { PageObjectResponse } from "@notionhq/client/build/src/api-endpoints";

export async function getStaticPaths() {
  const posts = await getNotionPosts();

  return posts.map((post: PageObjectResponse) => {
    const slug =
      (post.properties.slug as any)?.rich_text?.[0]?.plain_text || "no-slug";

    return {
      params: { slug },
      props: { post },
    };
  });
}

const { post } = Astro.props;

const title = (post.properties.title as any)?.title?.[0]?.plain_text || "無題";
const tags = (post.properties.Tags as any)?.multi_select || [];
const date = (post.properties.date as any)?.date?.start || "";

const blocks = await getNotionBlocks(post.id);
let content = (
  await Promise.all(blocks.map((block) => renderBlock(block)))
).join("");

// 最後のリストを閉じる処理を実行
content = finalizeRenderedContent(content);
---

<Layout title={title}>
  <article class="max-w-4xl mx-auto px-4 py-8">
    <h2 class="text-3xl font-bold mb-4">{title}</h2>

    <div class="flex gap-2 mb-4">
      {
        tags.map((tag: { name: string }) => (
          <span class="text-sm px-3 py-1 rounded-full border-primary">
            {tag.name}
          </span>
        ))
      }
    </div>

    <time class="text-gray-500">{date}</time>

    <div class="prose prose-lg max-w-none mt-8" set:html={content} />
  </article>
</Layout>

<script>
  // @ts-ignore
  function copyCodeToClipboard(codeId) {
    const codeElement = document.getElementById(codeId);
    if (!codeElement) {
      console.error("コード要素が見つかりません");
      return;
    }

    const text = codeElement.textContent || "";
    const button = document.querySelector(`button[data-target="${codeId}"]`);
    if (!button) {
      console.error("コピーボタンが見つかりません");
      return;
    }

    navigator.clipboard
      .writeText(text)
      .then(() => {
        const originalText = button.textContent || "";

        button.textContent = "コピーしました！";
        button.classList.add("bg-green-600");

        setTimeout(() => {
          button.textContent = originalText;
          button.classList.remove("bg-green-600");
        }, 2000);
      })
      .catch((err) => {
        console.error("コピーに失敗しました:", err);
        alert("コピーに失敗しました");
      });
  }
</script>
