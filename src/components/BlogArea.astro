---
import { getCollection } from "astro:content";

// コンテンツコレクションからブログ記事を取得
const blogPosts = await getCollection("blog", ({ data }) => {
  // 下書き記事を本番環境では除外（任意）
  return import.meta.env.PROD ? !data.draft : true;
});

// 日付でソート（新しい順）
const sortedPosts = blogPosts.sort((a, b) => {
  const dateA = new Date(a.data.date || "");
  const dateB = new Date(b.data.date || "");
  return dateB.getTime() - dateA.getTime();
});

const currentPath = Astro.url.pathname;
---

<div class="w-fit mx-auto text-center">
  <div class="mt-10">
    <ul class="space-y-4">
      {
        sortedPosts.map((post) => (
          <li class="border-b pb-4">
            <a href={`/${post.slug}`} class="hover:text-blue-600">
              <h3 class="text-xl font-medium">{post.data.title}</h3>
              <div class="flex justify-between items-center mt-2">
                <p class="text-gray-600 text-sm">
                  {post.data.date
                    ? new Date(post.data.date).toLocaleDateString()
                    : ""}
                </p>
                {post.data.tags && Array.isArray(post.data.tags) && (
                  <div class="flex gap-2">
                    {post.data.tags
                      .filter((tag): tag is string => typeof tag === "string")
                      .map((tag) => (
                        <a
                          href={`/tags/${encodeURIComponent(tag)}`}
                          class="text-xs bg-gray-100 px-2 py-1 rounded hover:bg-gray-200"
                        >
                          {tag}
                        </a>
                      ))}
                  </div>
                )}
              </div>
              {post.data.description && (
                <p class="text-gray-700 mt-2 text-left">
                  {post.data.description}
                </p>
              )}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</div>
