---
import { getCollection } from "astro:content";
import { getTagColor } from "../../lib/utils/tags";
import { formatDate } from "../../lib/utils/utils";

// 記事データを取得
const posts = await getCollection("blog");

// デバッグ情報
console.log(`記事の数: ${posts.length}`);
if (posts.length > 0) {
  console.log(`最初の記事: ${JSON.stringify(posts[0].data)}`);
  console.log(`記事ID: ${posts[0].id}`);
}

// 日付でソート
const sortedPosts = posts.sort((a, b) => {
  // dateはDate型として処理する
  const dateA =
    a.data.date instanceof Date ? a.data.date : new Date(a.data.date);
  const dateB =
    b.data.date instanceof Date ? b.data.date : new Date(b.data.date);
  return dateB.getTime() - dateA.getTime();
});

// デバッグ用：各記事のIDとデータを確認
console.log(
  "Posts Debug:",
  posts.map((post) => ({
    id: post.id,
    title: post.data.title,
    data: post.data,
  }))
);
---

<div class="grid grid-auto-300 gap-8">
  {
    sortedPosts.length > 0 ? (
      sortedPosts.map((post) => {
        const { title, tags, date, description } = post.data;

        // ファイル名から取得（blog/first-post.md → first-post）
        const slug = post.id
          .replace("blog/", "")
          .replace(".md", "")
          .replace(".mdx", "");
        const tag = Array.isArray(tags) && tags.length > 0 ? tags[0] : "その他";

        return (
          <div class="border-primary rounded-lg transition duration-300 hover:scale-102 hover:shadow-lg">
            <a href={`/${slug}`} class="block">
              <div
                class={`h-48 flex items-center justify-center text-white text-center rounded-t-lg ${getTagColor(tag)}`}
              >
                <p class="text-xl font-bold px-4">{title}</p>
              </div>
              <div class="px-6 py-6">
                <div class="flex justify-between items-center">
                  <div class="flex gap-2 flex-wrap">
                    {Array.isArray(tags) && tags.length > 0 ? (
                      tags.map((tag) => (
                        <span
                          class={`text-sm px-3 py-1 rounded-full ${getTagColor(tag)} text-white`}
                        >
                          {tag}
                        </span>
                      ))
                    ) : (
                      <span class="text-sm px-3 py-1 rounded-full bg-gray-500 text-white">
                        その他
                      </span>
                    )}
                  </div>
                  <p class="text-primary text-sm">
                    {formatDate(
                      date instanceof Date ? date.toISOString() : String(date)
                    )}
                  </p>
                </div>
                {description && <p class="mt-4 text-gray-600">{description}</p>}
                <h2 class="mt-5">{title}</h2>
              </div>
            </a>
          </div>
        );
      })
    ) : (
      <div class="col-span-full text-center py-10">
        <p class="text-xl text-gray-500">記事がありません</p>
      </div>
    )
  }
</div>
