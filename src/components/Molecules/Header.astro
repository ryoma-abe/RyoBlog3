---
import ThemeToggle from "../Atoms/ThemeToggle.astro";

const navItems = [
  { href: "/", label: "TOP" },
  { href: "/blog/page", label: "BLOG" },
  { href: "/about", label: "ABOUT" },
  { href: "/contact", label: "CONTACT" },
];
const currentPath = Astro.url.pathname;

// ブログ関連ページの判定
const isBlogRelated =
  currentPath.startsWith("/blog/") ||
  currentPath.startsWith("/tags/") ||
  currentPath === "/blog" ||
  (currentPath.length > 1 &&
    !currentPath.startsWith("/about") &&
    !currentPath.startsWith("/contact"));
---

<header class="flex justify-between items-center p-4 border-b">
  <a href="/" class="text-2xl font-bold">RyoBlog</a>

  <div class="flex items-center space-x-10">
    <nav class="hidden md:block">
      <ul class="flex space-x-6">
        {
          navItems.map((item) => {
            // TOPは完全一致、BLOGはブログ関連ページでもアクティブに
            const isActive =
              (item.label === "TOP" && currentPath === "/") ||
              (item.label === "BLOG" && isBlogRelated) ||
              (item.label === "ABOUT" && currentPath.startsWith("/about")) ||
              (item.label === "CONTACT" && currentPath.startsWith("/contact"));

            return (
              <li class="relative group">
                <a
                  href={item.href}
                  class={`pb-2 text-sm font-medium transition-colors ${
                    isActive
                      ? "text-primary"
                      : "text-gray-400 group-hover:text-primary"
                  }`}
                >
                  {item.label}
                </a>

                <span
                  class={`absolute left-0 -bottom-0.5 w-full h-0.5 transition-all duration-300 ${
                    isActive
                      ? "bg-red-400"
                      : "bg-red-400 scale-x-0 group-hover:scale-x-100 origin-left"
                  }`}
                />
              </li>
            );
          })
        }
      </ul>
    </nav>

    <ThemeToggle />
  </div>
</header>
