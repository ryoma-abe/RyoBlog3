---
import Header from "../components/common/Header.astro";
import Footer from "../components/common/Footer.astro";
import { getMeta } from "../lib/utils/meta";
import "../styles/global.css";
import CategoryButton from "../components/ui/CategoryButton.astro";

const meta = getMeta(Astro.url.pathname);

const title = Astro.props.title ?? meta.title;

// 記事詳細ページかどうか（例: /test-article のような1階層のみ）
const isArticlePage =
  Astro.url.pathname.slice(1).split("/").filter(Boolean).length === 1 &&
  !["/about", "/contact", "/blog", "/thanks", "/blog"].includes(
    Astro.url.pathname
  );

console.log(`Path: ${Astro.url.pathname}, isArticlePage: ${isArticlePage}`);
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>RyoBlog</title>
    <meta
      name="description"
      content="RyoBlog（りょうブログ）は、Web制作・Shopify開発・プログラミング学習・AIのノウハウを発信する技術ブログです。Astro × Tailwind CSS × Notion APIで構築された、超高速＆モダンな個人サイトです。"
    />
    <meta
      name="keywords"
      content="Web制作, Shopify, プログラミング, フロントエンド, Tailwind CSS, Notion API, Astro, AI, 技術ブログ"
    />
    <meta property="og:title" content="RyoBlog" />
    <meta
      property="og:description"
      content="RyoBlog（りょうブログ）は、Web制作・Shopify開発・プログラミング学習・AIのノウハウを発信する技術ブログです。Astro × Tailwind CSS × Notion APIで構築された、超高速＆モダンな個人サイトです。"
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://web-ryoma.conohawing.com/" />
    <meta
      property="og:image"
      content="https://web-ryoma.conohawing.com/images/ogp.png"
    />
    <meta name="twitter:card" content="summary_large_image" />
    <link rel="canonical" href="https://web-ryoma.conohawing.com/" />
    <link rel="icon" href="/favicon.png" type="image/png" />
    <!-- 残りはそのまま -->

    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "dark") {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </head>
  <body class="bg-primary text-primary">
    <Header />
    <main>
      <div class="container mx-auto pt-10 pb-20 px-5">
        {
          isArticlePage === false && (
            <h1 class="text-4xl font-bold text-center">{title}</h1>
          )
        }

        {
          isArticlePage === false &&
            title !== "送信完了" &&
            title !== "お問い合わせ" &&
            title !== "About" && <CategoryButton />
        }
        <slot />
      </div>
    </main>
    <Footer />
  </body>
</html>
